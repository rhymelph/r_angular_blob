[{"title":"【r_upgrade】快来升级你的Flutter应用","image":"images/r_upgrade.png","url":"articles/【r_upgrade】快来升级你的Flutter应用.html","createTime":"2020/08/24 17:45:55","tag":"Flutter","introduce":" 在移动开发过程中，应用升级是必不可少的一个环节，所以，r_upgrade应用升级插件就出现了，这里先鼓掌欢迎👏👏，下面是使用介绍  Android和IOS的升级应用插件==Flutter应用升级插件 在pubspec.yaml文件添加下面代码 注意，在Android应用中，请确保AndroidManifest.xml中声明以下权限，并在6.0系统上进行动态授权，不然会调用升级方法将抛出权限异常 info 里包含的信息如下: 注意： 部分http下载链接可能返回 max_length = -1，请自行判断 目前分为两部分\nuseDownloadManager: 新增升级的口味：(不支持使用DownloadManager下载) 该方法只会寻找当前应用版本名和版本号下下载过的ID 代码如下： 注意：目前热更新尚处于测试阶段，只支持Flutter代码的变更，不支持资源文件等，热更新造成的一切的后果插件的作者概不负责，由使用者承担。 如果你想自定义通知栏显示的内容, 可以这样做, 修改或添加文件路径为project/android/app/main/res/r_upgrade_value.xml，添加下面代码 然后.当你使用upgrade方法时,你应该设置参数notificationStyle，默认为显示预计完成时间. 结尾：Dart客栈已经推出Aqueduct框架系列教程专辑，欢迎喜欢学习Dart语言开发的小伙伴关注👏👏 ","hot":false},{"title":"Flutter黑科技一键打开资源文件","image":"images/heikeji_1.png","url":"articles/Flutter黑科技一键打开资源文件.html","createTime":"2020/04/22 15:43:01","tag":"Flutter","introduce":" 在Flutter开发过程中，使用资源文件是必不可少的，当项目的结构越来越复杂，引入的资源文件越来越多，大家有没有遇到这样的一个问题，如果我在代码中写了这样的一个文件路径assets/image/xxx/xxx.png的时候，当需要查看这个文件时，就会发现我们要一步一步的在自己的项目下找到assets文件夹，然后找到image，然后找到xxx...，这一个步骤浪费了大量的时间，并且每次查看就得浪费一次，如果有这样的一个能根据字符串一键打开这个图片该多好啊！，不用如果，现在就有了，只需要在Android Studio 查找插件FlutterQuickLocateAsset安装即可，so easy! 欢迎体验和评分！并且谢谢您的支持！ 以上就是这一节的所有内容，如果小伙伴们觉得有收获，不妨点一下点个赞，给予我写作和开源的一种肯定吧！ ","hot":false},{"title":"sketch使用总结","image":"images/sketch_1.png","url":"articles/sketch使用总结.html","createTime":"2020/04/19 09:25:16","tag":"sketch","introduce":"Content-generator-sketch-plugin\nhttps://github.com/timuric/Content-generator-sketch-plugin Fluid\nhttps://github.com/matt-curtis/Fluid-for-Sketch 分为两种：\n1.功能图标\n一般有两种状态：选中和未选中\n2.展示型图标 ios:\n工具栏和导航栏： 22x22\n标签栏: 25x25\nandroid:\n默认为：24dp 桌面应用图标：60x60\n设置中的图标：29x29 iconfont\nhttp://www.iconfont.cn 粗细，尺寸，风格，选中与非选中尺寸一致","hot":false},{"title":"Flutter自制工具之fluct助力Flutter快速开发神器","image":"images/fluct.png","url":"articles/Flutter自制工具之fluct助力Flutter快速开发神器.html","createTime":"2020/02/29 08:40:44","tag":"Dart","introduce":"  一个帮助开发Flutter应用程序的工具\n.----------------------------------------------\n| github地址:\n| https://github.com/rhymelph/fluct\n| pub地址：\n| https://pub.dev/packages/fluct\n`---------------------------------------------- 该工具无需添加到依赖项中，我们只需要激活即可,使用如下命令： fluct 目前只有两个命令create和gen-assets 在Flutter开发过程中，我们创建文件是必须的，而AS自带的创建文件，并没有自动的生成相关的内容，这会让开发者非常的苦恼，类名还需要自己手动敲的话，而该命令，直接可以一步到位。 当运行此命令后，命令行会输出以下内容 可以看到，该命令输出的内容是简单易懂的，我们来简单使用一下吧。 创建IndexPage页面，继承自StatefulWidget,可以使用如下命令: 运行成功之后，我们会在项目下找到index_page.dart文件，内容为: 当然，你也可以指定哪个文件夹，例如，我要在./lib/src/page 文件夹下创建IndexPage，使用如下命令 在开始之前，我们需要在项目根目录下新建一个fluct.yaml文件,因为fluct create -t custom命令会找到它，内容如下： 这里，我声明了inh命令，然后运行这个命令之后会在生成文件的时候添加inh对应的内容，内容中我们值得注意的是$NAME$占位符，该字符串会被替换成根据文件名生成的内容，例如：index_page 会插入IndexPage到$NAME$占位符中，最后，我们运行以下命令: 运行成功之后，我们能够在根目录下找到index_inherited.dart文件，内容也是对应的自定义内容 我们在使用资源文件时，需要在pubspec.yaml文件声明资源文件的路径\n\n例如：我在./assets/images文件夹下添加a.png图片，需要在pubspec.yaml文件下声明 或者使用文件夹路径 这一步如果文件多起来，很容易出现混乱，导致声明麻烦，引用麻烦，并随着项目的迭代，资源文件有些不用了，也不知道哪个是哪个，这个时候，fluct gen-assets命令帮到你 当运行fluct gen-assets -h会输出以下内容 到此，你已经拥有了自动资源绑定的功能了，输入fluct gen-assets即可 \n你可以看到，输出的内容也是非常的友好！然后我们来看以下a.dart文件 所有的内容都声明好了，very good ~ 有小伙伴可能会疑惑，fluct create运行之后会发现未找到命令，可能你使用了flutter pub global activate fluct命令激活，这个时候，我们可以使用flutter pub run fluct create运行 最后，希望大家喜欢这个工具，并关注我，了解更多关于Flutter/Dart开发","hot":false},{"title":"Flutter自制插件之r_album图片或视频保存到相册","image":"images/r_album.png","url":"articles/Flutter自制插件之r_album图片或视频保存到相册.html","createTime":"2020/02/22 14:32:07","tag":"Flutter","introduce":"  Flutter 图片或者视频保存到相册插件，支持Android和IOS.\n.----------------------------------------------\n| github地址:\n| https://github.com/rhymelph/r_album\n| pub地址：\n| https://pub.dev/packages/r_album\n`---------------------------------------------- 欢迎关注微信订阅号：Dart客栈 交流群：29380453","hot":false},{"title":"2020年开源计划","image":"images/2020_open_source.png","url":"articles/2020年开源计划.html","createTime":"2020/02/19 16:22:07","tag":"个人","introduce":" 2020年已经过去快六分之一多了，经过了春节，经过了肺炎，虽然一开头就跪了，但是我们无论如何都是无法改变过去的的事实，我们只能把握未来，所以，这一篇文章作为2020年的个人计划，希望我能够按照开源计划开源项目给大家！","hot":false},{"title":"用AngularDart写一个博客网站","image":"images/angular_blog.png","url":"articles/用AngularDart写一个博客网站.html","createTime":"2020/02/19 16:15:42","tag":"AngularDart","introduce":" 页面使用的firebase进行托管，如果访问过程发现比较卡顿，FQ可食用流畅模式 关于AngularDart个人是从今年春节开始学习AngularDart,以下对于学习AngularDart的个人观点 1.为什么是AngularDart呢，vue、ReactNative等的前端框架技术不香吗？ 作为Dart技术栈，觉得很用必要学习一番AngularDart，这样代码逻辑不管是Flutter、AngularDart、Dart服务端都可以共用，这样不是更香？ 2.AngularDart的生态环境有了吗？ 至于生态环境，目前国内资源比较缺乏，如果大家都能学习和食用AngularDart，那么资源和生态只是迟早的问题 3.为什么不使用Flutter web? Flutter web目前使用的话还算过早，很多兼容性和稳定性都不足，并且以Flutter开发的模式，前端转型到Flutter web可以说还比较困难，而AngularDart目前是使用html+css+dart的开发模式，避免了使用JavaScript这一种不严谨的语言，而Dart是一种强类型语言，并且面向对象，如果后续维护，可以看到使用Dart作为脚本语言的优势会越来越突出 目前的话，AngularDart并不是停止更新，而是对于Flutter web需求量增多，部分开发团队转移到该项目中维护了，如果AngularDart使用者也同样增多，相信会引起AngularDart团队的关注，并且AngularDart版本号已经迭代到^6.0.0，相信经过这么长时间的迭代，不会轻易放弃该项目的，并且AngularDart是一个强大的框架 5.学习AngularDart有哪些资源？ 学习AngularDart我们可以到AngularDart官网查看，官网的内容虽然对于最新版本还比较旧，但还是能学习到hero小demo、如何显示数据、响应用户输入，路由、http请求等，相对来说还是比较齐全，如果在官网上面发现部分内容过期，而又不知道解决时，我们可以到stackoverflow查找，实在不行，可以加入到Dart客栈Q群:129380453，如果想了解更多关于AngularDart开发相关知识，可以在微信中查找Dart客栈订阅号，后续将会推出更多的教程，期待您的关注 6.学习AngularDart容易吗？ 对于前端，可以绑定html+css，对于Dart语法，其中有很多关于JavaScript的身影，学习起来是比较容易的，百度一查，有很多关于Dart的基本语法，基本上2-3天就可以熟悉大致的语法，如果你骨骼精奇，一天就能学习完 对于移动端，就需要学习html+css，而Dart本身是面向对象语言，基本上了解以下大概即可，如果你不想学习html+css，那么网上有很多模版，我们直接可以直接引用，我经常去的网站是 模版之家里面大部分模版免费下载，各种网站一键弄好 目前博客部分代码尚未稳定，暂时不做开源，如果小伙伴对该篇文章点赞数量比较多，就会加紧时间完善，并构建好dart-cli，对代码开源，后续我会出一系列教程，分享给大家！","hot":false},{"title":"Flutter自制插件之r_router无需context路由插件","image":"images/r_router.png","url":"articles/Flutter自制插件之r_router无需context路由插件.html","createTime":"2020/02/08 10:10:10","tag":"Flutter","introduce":"  一个无需使用context导航的Flutter路由插件，支持dialog\n.----------------------------------------------\n| github地址:\n| https://github.com/rhymelph/r_router\n| pub地址：\n| https://pub.dev/packages/r_router\n`---------------------------------------------- 支持下面的方法 你可以使用下面代码进行路由跳转","hot":false},{"title":"Flutter自制插件之r_calendar日历插件","image":"images/r_calendar.png","url":"articles/Flutter自制插件之r_calendar日历插件.html","createTime":"2020/02/08 10:10:10","tag":"Flutter","introduce":"  📅📆Flutter日历插件，支持自定义日历，月视图/周视图切换、点击拦截、单选（切换月自动选）、多选（散选/聚选）\n.----------------------------------------------\n| github地址:\n| https://github.com/rhymelph/r_calendar\n| pub地址:\n| https://pub.dev/packages/r_calendar\n| apk体验：\n| https://fir.im/2aut\n`---------------------------------------------- 用户可以通过将数据设置到controller里面，然后再从RCalendarCustomWidget里获取","hot":false},{"title":"Flutter自制插件之r_upgrade应用升级下载","image":"images/r_upgrade.png","url":"articles/Flutter自制插件之r_upgrade应用升级下载.html","createTime":"2020/02/08 10:10:10","tag":"Flutter","introduce":" 在移动开发过程中，应用升级是必不可少的一个环节，所以，r_upgrade应用升级插件就出现了，这里先鼓掌欢迎👏👏，下面是使用介绍  Android和IOS的升级应用插件==Flutter应用升级插件 在pubspec.yaml文件添加下面代码 info 里面包含的信息如下: total 应用总大小,bytes值 status 应用的下载状态： progress 已下载的大小bytes值 planTime 计划下载完成所需时间/秒 address 下载到本地的地址路径 percent 下载进度 范围0-100 id 当前下载任务的id speed 当前下载速度kb/s 注意，在Android应用中，请确保AndroidManifest.xml中声明以下权限，并在6.0系统上进行动态授权，不然会调用升级方法将抛出权限异常","hot":false},{"title":"Flutter自制插件之r_scan二维码&条形码扫描（支持文件、url、内存、相机）","image":"images/r_scan.png","url":"articles/Flutter自制插件之r_scan二维码&条形码扫描（支持文件、url、内存、相机）.html","createTime":"2019/12/08 10:10:10","tag":"Flutter","introduce":" 二维码作为信息的载体，广泛应用于我们生活的方方面面，例如：使用支付宝支付，二维码加好友，二维码推广等等，能举例的例子多不胜数，而如果你的应用支持二维码的扫描，用户和体验将会翻倍的增长，如果你是应用的开发者，欢迎来使用此二维码扫描插件！并希望能给予项目一个star，谢谢！项目地址：https://github.com/rhymelph/r_scan 你可以在pub.dev网站上面搜索r_scan即可找到该插件，添加下面代码到pubspec.yaml文件 android6.0系统以上请动态授权，可以结合permission_handler插件使用，代码如下： 需要在info.plist文件下添加如下代码： 使用RScanController类的实例直接调用 6.RScanResult(二维码扫描结果)\n当扫描到二维码&条形码将返回该对象，包含如下内容","hot":false}]